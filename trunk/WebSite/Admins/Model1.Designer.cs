//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("JawBook.DbModel", "Jaw_Race", "Races", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebSite.Admins.Races), "Jaws", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebSite.Admins.Jaws), true)]
[assembly: EdmRelationshipAttribute("JawBook.DbModel", "Rent_Jaw", "Jaws", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebSite.Admins.Jaws), "Rents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebSite.Admins.Rents), true)]
[assembly: EdmRelationshipAttribute("JawBook.DbModel", "Rent_User", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebSite.Admins.Users), "Rents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebSite.Admins.Rents), true)]

#endregion

namespace WebSite.Admins
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EdmMetadata> EdmMetadata
        {
            get
            {
                if ((_EdmMetadata == null))
                {
                    _EdmMetadata = base.CreateObjectSet<EdmMetadata>("EdmMetadata");
                }
                return _EdmMetadata;
            }
        }
        private ObjectSet<EdmMetadata> _EdmMetadata;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Jaws> Jaws
        {
            get
            {
                if ((_Jaws == null))
                {
                    _Jaws = base.CreateObjectSet<Jaws>("Jaws");
                }
                return _Jaws;
            }
        }
        private ObjectSet<Jaws> _Jaws;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Races> Races
        {
            get
            {
                if ((_Races == null))
                {
                    _Races = base.CreateObjectSet<Races>("Races");
                }
                return _Races;
            }
        }
        private ObjectSet<Races> _Races;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rents> Rents
        {
            get
            {
                if ((_Rents == null))
                {
                    _Rents = base.CreateObjectSet<Rents>("Rents");
                }
                return _Rents;
            }
        }
        private ObjectSet<Rents> _Rents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EdmMetadata EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEdmMetadata(EdmMetadata edmMetadata)
        {
            base.AddObject("EdmMetadata", edmMetadata);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jaws EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJaws(Jaws jaws)
        {
            base.AddObject("Jaws", jaws);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Races EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaces(Races races)
        {
            base.AddObject("Races", races);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRents(Rents rents)
        {
            base.AddObject("Rents", rents);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JawBook.DbModel", Name="EdmMetadata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EdmMetadata : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EdmMetadata object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static EdmMetadata CreateEdmMetadata(global::System.Int32 id)
        {
            EdmMetadata edmMetadata = new EdmMetadata();
            edmMetadata.Id = id;
            return edmMetadata;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModelHash
        {
            get
            {
                return _ModelHash;
            }
            set
            {
                OnModelHashChanging(value);
                ReportPropertyChanging("ModelHash");
                _ModelHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModelHash");
                OnModelHashChanged();
            }
        }
        private global::System.String _ModelHash;
        partial void OnModelHashChanging(global::System.String value);
        partial void OnModelHashChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JawBook.DbModel", Name="Jaws")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Jaws : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Jaws object.
        /// </summary>
        /// <param name="jawId">Initial value of the JawId property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static Jaws CreateJaws(global::System.Guid jawId, global::System.DateTime dateOfBirth, global::System.Int32 price)
        {
            Jaws jaws = new Jaws();
            jaws.JawId = jawId;
            jaws.DateOfBirth = dateOfBirth;
            jaws.Price = price;
            return jaws;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid JawId
        {
            get
            {
                return _JawId;
            }
            set
            {
                if (_JawId != value)
                {
                    OnJawIdChanging(value);
                    ReportPropertyChanging("JawId");
                    _JawId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JawId");
                    OnJawIdChanged();
                }
            }
        }
        private global::System.Guid _JawId;
        partial void OnJawIdChanging(global::System.Guid value);
        partial void OnJawIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Int32 _Price;
        partial void OnPriceChanging(global::System.Int32 value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Picture
        {
            get
            {
                return StructuralObject.GetValidValue(_Picture);
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private global::System.Byte[] _Picture;
        partial void OnPictureChanging(global::System.Byte[] value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Race_RaceId
        {
            get
            {
                return _Race_RaceId;
            }
            set
            {
                OnRace_RaceIdChanging(value);
                ReportPropertyChanging("Race_RaceId");
                _Race_RaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Race_RaceId");
                OnRace_RaceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _Race_RaceId;
        partial void OnRace_RaceIdChanging(Nullable<global::System.Guid> value);
        partial void OnRace_RaceIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JawBook.DbModel", "Jaw_Race", "Races")]
        public Races Races
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Races>("JawBook.DbModel.Jaw_Race", "Races").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Races>("JawBook.DbModel.Jaw_Race", "Races").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Races> RacesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Races>("JawBook.DbModel.Jaw_Race", "Races");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Races>("JawBook.DbModel.Jaw_Race", "Races", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JawBook.DbModel", "Rent_Jaw", "Rents")]
        public EntityCollection<Rents> Rents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rents>("JawBook.DbModel.Rent_Jaw", "Rents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rents>("JawBook.DbModel.Rent_Jaw", "Rents", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JawBook.DbModel", Name="Races")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Races : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Races object.
        /// </summary>
        /// <param name="raceId">Initial value of the RaceId property.</param>
        public static Races CreateRaces(global::System.Guid raceId)
        {
            Races races = new Races();
            races.RaceId = raceId;
            return races;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RaceId
        {
            get
            {
                return _RaceId;
            }
            set
            {
                if (_RaceId != value)
                {
                    OnRaceIdChanging(value);
                    ReportPropertyChanging("RaceId");
                    _RaceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RaceId");
                    OnRaceIdChanged();
                }
            }
        }
        private global::System.Guid _RaceId;
        partial void OnRaceIdChanging(global::System.Guid value);
        partial void OnRaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JawBook.DbModel", "Jaw_Race", "Jaws")]
        public EntityCollection<Jaws> Jaws
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Jaws>("JawBook.DbModel.Jaw_Race", "Jaws");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Jaws>("JawBook.DbModel.Jaw_Race", "Jaws", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JawBook.DbModel", Name="Rents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rents object.
        /// </summary>
        /// <param name="rentId">Initial value of the RentId property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        public static Rents CreateRents(global::System.Guid rentId, global::System.DateTime start, global::System.DateTime end)
        {
            Rents rents = new Rents();
            rents.RentId = rentId;
            rents.Start = start;
            rents.End = end;
            return rents;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RentId
        {
            get
            {
                return _RentId;
            }
            set
            {
                if (_RentId != value)
                {
                    OnRentIdChanging(value);
                    ReportPropertyChanging("RentId");
                    _RentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RentId");
                    OnRentIdChanged();
                }
            }
        }
        private global::System.Guid _RentId;
        partial void OnRentIdChanging(global::System.Guid value);
        partial void OnRentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> User_UserId
        {
            get
            {
                return _User_UserId;
            }
            set
            {
                OnUser_UserIdChanging(value);
                ReportPropertyChanging("User_UserId");
                _User_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_UserId");
                OnUser_UserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _User_UserId;
        partial void OnUser_UserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUser_UserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Jaw_JawId
        {
            get
            {
                return _Jaw_JawId;
            }
            set
            {
                OnJaw_JawIdChanging(value);
                ReportPropertyChanging("Jaw_JawId");
                _Jaw_JawId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Jaw_JawId");
                OnJaw_JawIdChanged();
            }
        }
        private Nullable<global::System.Guid> _Jaw_JawId;
        partial void OnJaw_JawIdChanging(Nullable<global::System.Guid> value);
        partial void OnJaw_JawIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JawBook.DbModel", "Rent_Jaw", "Jaws")]
        public Jaws Jaws
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Jaws>("JawBook.DbModel.Rent_Jaw", "Jaws").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Jaws>("JawBook.DbModel.Rent_Jaw", "Jaws").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Jaws> JawsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Jaws>("JawBook.DbModel.Rent_Jaw", "Jaws");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Jaws>("JawBook.DbModel.Rent_Jaw", "Jaws", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JawBook.DbModel", "Rent_User", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("JawBook.DbModel.Rent_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("JawBook.DbModel.Rent_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("JawBook.DbModel.Rent_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("JawBook.DbModel.Rent_User", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JawBook.DbModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Users CreateUsers(global::System.Guid userId)
        {
            Users users = new Users();
            users.UserId = userId;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JawBook.DbModel", "Rent_User", "Rents")]
        public EntityCollection<Rents> Rents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rents>("JawBook.DbModel.Rent_User", "Rents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rents>("JawBook.DbModel.Rent_User", "Rents", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
